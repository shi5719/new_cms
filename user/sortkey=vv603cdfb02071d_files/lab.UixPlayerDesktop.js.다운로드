
/*
	lab.UixPlayerDesktop.js, version 1.0
	Copyright 2017.09.08, ywtag
	Re...

*/


var UixPlayerDesktop = Base.extend({

	/* ------------------------------------------------------------------------------------------------------------------
	// ------------------------------------ variant block --------------------------------------------------------
	// ------------------------------------------------------------------------------------------------------------------*/

	medialoadcount: 0,
	initmedialoadcompleted: false,
	loadingsuccess: false,

	mouseDownLayoutX : 0,
	mousePreLayoutX : 0,

	firstPopReady : false,
	firstPipReady : false,
	distLayoutTmpX : 0,

	isvideodraging: false,

	media1: null,
	media2: null,
	media3: null,
	media4: null,

	media1_id : 'lab-player1',
	media2_id : 'lab-player2',
	media3_id : 'lab-player3',
	media4_id : 'lab-player4',

	media1videoWidth : 0,
	media2videoWidth : 0,
	media3videoWidth : 0,
	media4videoWidth : 0,

	media1videoHeight : 0,
	media2videoHeight : 0,
	media3videoHeight : 0,
	media4videoHeight : 0,

	perLastMainL : 0.0,
	perLastMainT : 0.0,
	perLastMainW : 0.0,
	perLastMainH : 0.0,

	perLastSubL : 0.0,
	perLastSubT : 0.0,
	perLastSubW : 0.0,
	perLastSubH : 0.0,
	lastMainchannelIndex: null,

	currentSceneMode: SceneMode.POP,
	currentQuardMode: SceneQuardMode.POPP,

	media1canplay: false,
	media2canplay: false,
	media3canplay: false,
	media4canplay: false,


	media1seeking: false,
	media2seeking: false,
	media3seeking: false,
	media4seeking: false,

	media1full: false,
	media2full: false,
	media3full: false,
	media4full: false,

	media1duration: 0.0,

	dtoContentInfo: null,

	mainEventTarget: null,

	settingvolume : 0.8,

	constructor: function() {



	},

	/* ------------------------------------------------------------------------------------------------------------------
	// ------------------------------------ get/set block --------------------------------------------------------
	// ------------------------------------------------------------------------------------------------------------------*/

	setEventTarget: function(_eventTarget) {

		this.mainEventTarget = _eventTarget;
	},



	/* ------------------------------------------------------------------------------------------------------------------
	// ------------------------------------ function block --------------------------------------------------------
	// ------------------------------------------------------------------------------------------------------------------*/

	initialize: function(_dto) {



		this.media1canplay = false;
		this.media2canplay = false;
		this.media3canplay = false;
		this.media4canplay = false;

		this.media1seeking = false;
		this.media2seeking = false;
		this.media3seeking = false;
		this.media4seeking = false;

		this.perLastMainL = 0.0;
		this.perLastMainT = 0.0;
		this.perLastMainW = 0.0;
		this.perLastMainH = 0.0;

		this.perLastSubL = 0.0;
		this.perLastSubT = 0.0;
		this.perLastSubW = 0.0;
		this.perLastSubH = 0.0;

		this.churl1 = '';
		this.churl2 = '';
		this.churl3 = '';
		this.churl4 = '';
		this.streamingtype = '';

		this.lastMainchannelIndex = [0, 1, 2, 3];

		this.media1full = false;
		this.media2full = false;
		this.media3full = false;
		this.media4full = false;

		this.media1duration = 0.0;
		this.medialoadcount = 0;

		this.loadingsuccess = false;
		this.mouseDownLayoutX = 0;
		this.mousePreLayoutX = 0;

		this.firstPopReady = false;
		this.firstPipReady = false;
		this.distLayoutTmpX = 0;



		this.isvideodraging = false;

		this.dtoContentInfo = _dto;

		this.initLayout();

		this.registEvent();

		this.media1 = videojs(MediaIDS.MEDIA_ID1);
		this.media2 = videojs(MediaIDS.MEDIA_ID2);
		this.media3 = videojs(MediaIDS.MEDIA_ID3);
		this.media4 = videojs(MediaIDS.MEDIA_ID4);

		// $(HtmlDefine.MAINBODY_LOGO_PATH).on('click', function () {
		// 	var me = bizVideoPlayer.getUixVideoPlayer();
		// 	alert('y'); me.media1.play();
		// });
		//


		if (this.dtoContentInfo._contenttype === ContentType.VIDEO1) {
			this.initMedia(this.media1);
		}
		else if (this.dtoContentInfo._contenttype === ContentType.VIDEO2) {
			this.initMedia(this.media1);
			this.initMedia(this.media2);
		}
		else if (this.dtoContentInfo._contenttype === ContentType.VIDEO3) {
			this.initMedia(this.media1);
			this.initMedia(this.media2);
			this.initMedia(this.media3);
		}
		else if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
			this.initMedia(this.media1);
			this.initMedia(this.media2);
			this.initMedia(this.media3);
			this.initMedia(this.media4);
		}

		var me = bizVideoPlayer.getUixVideoPlayer();
		if(mainApp.islive === "1") {
			// 라이브시 자동시작하면 크롬에서 loadeddata event 발생안함
			if (me.mainEventTarget) me.mainEventTarget.fire(EventDefine.VIDEO_LOADINGCOMPLETED);
		}

		this.media1.on('loadeddata', this.onloadeddata);
		this.media2.on('loadeddata', this.onloadeddata);
		this.media3.on('loadeddata', this.onloadeddata);
		this.media4.on('loadeddata', this.onloadeddata);

		this.media1.on('error', this.onerror);
		this.media2.on('error', this.onerror);
		this.media3.on('error', this.onerror);
		this.media4.on('error', this.onerror);

		this.media1.on('pause', this.onpause);
		this.media2.on('pause', this.onpause);
		this.media3.on('pause', this.onpause);
		this.media4.on('pause', this.onpause);

		this.media1.on('play', this.onplay);
		this.media2.on('play', this.onplay);
		this.media3.on('play', this.onplay);
		this.media4.on('play', this.onplay);

		this.media1.on('seeked', this.onseeked);
		this.media2.on('seeked', this.onseeked);
		this.media3.on('seeked', this.onseeked);
		this.media4.on('seeked', this.onseeked);

		this.media1.on('canplay', this.oncanplay);
		this.media2.on('canplay', this.oncanplay);
		this.media3.on('canplay', this.oncanplay);
		this.media4.on('canplay', this.oncanplay);

		this.media1.on('timeupdate', this.ontimeupdate);
		this.media1.on('ended', this.onended);

		this.media1.on('durationchange', function() {

			console.log("durationchange : " + this.id() );

			var me = bizVideoPlayer.getUixVideoPlayer();

			if (this.id() === MediaIDS.MEDIA_ID1) {

				me.media1duration = this.duration();

				if(me.media1duration == "Infinity") {
					me.mainEventTarget.fire(EventDefine.VIDEO_DURATIONCHANGE, 86400*1);
				}
				else if(me.media1duration == 'undefine') {
					me.mainEventTarget.fire(EventDefine.VIDEO_DURATIONCHANGE, 86400*1);
				}
				else {
					me.mainEventTarget.fire(EventDefine.VIDEO_DURATIONCHANGE, me.media1duration);
				}

				me.mainEventTarget.fire(EventDefine.VIDEO_TIMEUPDATE, 0);
			}
		});
	},

	ontimeupdate: function() {
		var me = bizVideoPlayer.getUixVideoPlayer();
		if (this.id() === MediaIDS.MEDIA_ID1) {
			me.mainEventTarget.fire(EventDefine.VIDEO_TIMEUPDATE, this.currentTime());
		}
	},

	onpause: function() {
		console.log('paused: ' + this.id());
	},

	onplay: function() {
		console.log('played: ' + this.id());
	},

	onseeked: function() {

		console.log('seeked: ' + this.id());
		var me = bizVideoPlayer.getUixVideoPlayer();

		if (this.id() === MediaIDS.MEDIA_ID1) me.media1seeking = false;
		else if (this.id() === MediaIDS.MEDIA_ID2) me.media2seeking = false;
		else if (this.id() === MediaIDS.MEDIA_ID3) me.media3seeking = false;
		else if (this.id() === MediaIDS.MEDIA_ID4) me.media4seeking = false;
	},

	onended: function() {

		// ended event
		console.log('ended');

		var me = bizVideoPlayer.getUixVideoPlayer();

		if (this.id() === MediaIDS.MEDIA_ID1) {
			me.mainEventTarget.fire(EventDefine.VIDEO_ENDED);
		}
	},

	oncanplay: function() {

		console.log(this.id() + ': canplay');

		var me = bizVideoPlayer.getUixVideoPlayer();

		if (this.id() === MediaIDS.MEDIA_ID1) {
			me.media1canplay = true;

			if (me.dtoContentInfo._contenttype === ContentType.VIDEO1) {
				this.volume(me.settingvolume);
			}
			else {
				if (me.dtoContentInfo._volumechannelindex == '0') {
					this.volume(me.settingvolume);
				}
				else {
					this.volume(0.0);
				}
			}
		}
		else if (this.id() === MediaIDS.MEDIA_ID2) {
			me.media2canplay = true;

			if (me.dtoContentInfo._volumechannelindex == '0') {
				this.volume(0.0);
			}
			else if (me.dtoContentInfo._volumechannelindex == '1') {
				this.volume(me.settingvolume);
			}
		}
		else if (this.id() === MediaIDS.MEDIA_ID3) {
			me.media3canplay = true;
			this.volume(0.0);
		}
		else if (this.id() === MediaIDS.MEDIA_ID4) {
			me.media4canplay = true;
			this.volume(0.0);
		}

		if (me.initmedialoadcompleted) {
			// 브라우저 최초 로딩시에만 이벤트 발생
			me.loadingsuccess = false;
			if (me.dtoContentInfo._contenttype === ContentType.VIDEO1) {
				if ( me.medialoadcount === 1) {
					me.loadingsuccess = true;
				}
			}
			else if (me.dtoContentInfo._contenttype === ContentType.VIDEO2) {
				if ( me.medialoadcount === 2) {
					me.loadingsuccess = true;
				}
			}
			else if (me.dtoContentInfo._contenttype === ContentType.VIDEO3) {
				if ( me.medialoadcount === 3) {
					me.loadingsuccess = true;
				}
			}
			else if (me.dtoContentInfo._contenttype === ContentType.VIDEO4) {
				if ( me.medialoadcount === 4) {
					me.loadingsuccess = true;
				}
			}

			// fire
			if (me.loadingsuccess) {
				me.initmedialoadcompleted = false;
				if(mainApp.islive === "1") {
				}
				else {
					if (me.mainEventTarget) me.mainEventTarget.fire(EventDefine.VIDEO_LOADINGCOMPLETED);
				}
				if (me.mainEventTarget) me.mainEventTarget.fire(EventDefine.VIDEO_VOLUMECHANGE, me.settingvolume);
			}
			mainApp.seek(mainApp.startat);
		}
	},

	onerror: function() {
		// MEDIA_ERR_CUSTOM","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_ENCRYPTED

		var me = bizVideoPlayer.getUixVideoPlayer();
		me.mainEventTarget.fire(EventDefine.VIDEO_ERROR, this.error().code, this.id());

		if (this.id() === MediaIDS.MEDIA_ID1) me.media1canplay = false;
		else if (this.id() === MediaIDS.MEDIA_ID2) me.media2canplay = false;
		else if (this.id() === MediaIDS.MEDIA_ID3) me.media3canplay = false;
		else if (this.id() === MediaIDS.MEDIA_ID4) me.media4canplay = false;


		console.log('initMedia is error!' + this.id(), this.error().code, this.error().type , this.error().message);
		/*
        switch (this.error().code)
        {
            case this.error().MEDIA_ERR_CUSTOM:

            default:
                break;
        }
        */
	},

	onloadeddata: function() {

		console.log("onloadeddata");

		var me = bizVideoPlayer.getUixVideoPlayer();
		me.medialoadcount++;

		if (me.dtoContentInfo._contenttype === ContentType.VIDEO1) {

			me.mainEventTarget.fire(EventDefine.VIDEO_LOADEDDATA, me.medialoadcount);		//-> 'loading...' 메세지 뿌려줌

			me.media1videoWidth = me.media1.videoWidth();
			me.media1videoHeight = me.media1.videoHeight();

			if (me.medialoadcount === 1) {
				me.initmedialoadcompleted = true;
				me.setLayout1();
			}
		}
		else if (me.dtoContentInfo._contenttype === ContentType.VIDEO2) {

			me.mainEventTarget.fire(EventDefine.VIDEO_LOADEDDATA, me.medialoadcount);
			if (this.id() === MediaIDS.MEDIA_ID1) {

				me.media1videoWidth = me.media1.videoWidth();
				me.media1videoHeight = me.media1.videoHeight();

				//me.initMedia(me.media2);
			}
			else if (this.id() === MediaIDS.MEDIA_ID2) {
				me.media2videoWidth = me.media2.videoWidth();
				me.media2videoHeight = me.media2.videoHeight();
			}

			if (me.medialoadcount === 2) {
				me.initmedialoadcompleted = true;
				me.setLayout2();
			}
		}
		else if (me.dtoContentInfo._contenttype === ContentType.VIDEO3) {

			me.mainEventTarget.fire(EventDefine.VIDEO_LOADEDDATA, me.medialoadcount);

			if (this.id() === MediaIDS.MEDIA_ID1) {

				me.media1videoWidth = me.media1.videoWidth();
				me.media1videoHeight = me.media1.videoHeight();

				// me.media2 = videojs(MediaIDS.MEDIA_ID2);
				//me.initMedia(me.media2);
			}
			else if (this.id() === MediaIDS.MEDIA_ID2) {

				me.media2videoWidth = me.media2.videoWidth();
				me.media2videoHeight = me.media2.videoHeight();

				// me.media3 = videojs(MediaIDS.MEDIA_ID3);
				//me.initMedia(me.media3);
			}
			else if (this.id() === MediaIDS.MEDIA_ID3) {
				me.media3videoWidth = me.media3.videoWidth();
				me.media3videoHeight = me.media3.videoHeight();
			}

			if (me.medialoadcount === 3) {
				me.initmedialoadcompleted = true;
				me.lastMainchannelIndex = [0, 1, 2, 3];
				me.setLayout3();

				$(HtmlDefine.MAINBODY_LAYOUT3_MAINCH4).hide();
				$(HtmlDefine.MAINBODY_LAYOUT3).css('display', 'inline-block');
				$(HtmlDefine.MAINBODY_LAYOUT4).css('display', 'inline-block');
			}
		}
		else if (me.dtoContentInfo._contenttype === ContentType.VIDEO4) {

			me.mainEventTarget.fire(EventDefine.VIDEO_LOADEDDATA, me.medialoadcount);

			if (this.id() === MediaIDS.MEDIA_ID1) {

				me.media1videoWidth = me.media1.videoWidth();
				me.media1videoHeight = me.media1.videoHeight();

				// me.media2 = videojs(MediaIDS.MEDIA_ID2);
				// me.initMedia(me.media2);
			}
			else if (this.id() === MediaIDS.MEDIA_ID2) {

				me.media2videoWidth = me.media2.videoWidth();
				me.media2videoHeight = me.media2.videoHeight();

				// me.media3 = videojs(MediaIDS.MEDIA_ID3);
				// me.initMedia(me.media3);
			}
			else if (this.id() === MediaIDS.MEDIA_ID3) {

				me.media3videoWidth = me.media3.videoWidth();
				me.media3videoHeight = me.media3.videoHeight();

				// me.media4 = videojs(MediaIDS.MEDIA_ID4);
				// me.initMedia(me.media4);
			}
			else if (this.id() === MediaIDS.MEDIA_ID4) {
				me.media4videoWidth = me.media4.videoWidth();
				me.media4videoHeight = me.media4.videoHeight();
			}

			if (me.medialoadcount === 4) {
				me.initmedialoadcompleted = true;
				me.setLayout4();

				$(HtmlDefine.MAINBODY_LAYOUT3).css('display', 'inline-block');
				$(HtmlDefine.MAINBODY_LAYOUT4).css('display', 'inline-block');
			}
		}
	},

	registEvent: function() {

		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).on('mousemove', this.OnMouseMoveVideoWrapper);

		/*
		$(HtmlDefine.VIDEO_ID1).css( 'cursor', 'w-resize' );
		$(HtmlDefine.VIDEO_ID1).on('mouseout', this.OnMouseOutVideo01Wrapper);
		$(HtmlDefine.VIDEO_ID1).on('mousedown', this.OnMouseDownVideo01Wrapper);
		*/

		if (this.dtoContentInfo._contenttype == ContentType.VIDEO2) {
			$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).css('cursor', 'w-resize');
			$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).on('mouseleave', this.OnMouseOutVideo01Wrapper);  // diff mouseout
			$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).on('mousedown', this.OnMouseDownVideo01Wrapper);

			$(HtmlDefine.VIDEO_ID1).on('dblclick', this.OnMouseDBClickVideWrapper);
			$(HtmlDefine.VIDEO_ID2).on('dblclick', this.OnMouseDBClickVideWrapper);
		}
		else if (this.dtoContentInfo._contenttype == ContentType.VIDEO3) {
			$(HtmlDefine.VIDEO_ID1).on('dblclick', this.OnMouseDBClickVideWrapper);
			$(HtmlDefine.VIDEO_ID2).on('dblclick', this.OnMouseDBClickVideWrapper);
			$(HtmlDefine.VIDEO_ID3).on('dblclick', this.OnMouseDBClickVideWrapper);

		}
		else if (this.dtoContentInfo._contenttype == ContentType.VIDEO4) {
			$(HtmlDefine.VIDEO_ID1).on('dblclick', this.OnMouseDBClickVideWrapper);
			$(HtmlDefine.VIDEO_ID2).on('dblclick', this.OnMouseDBClickVideWrapper);
			$(HtmlDefine.VIDEO_ID3).on('dblclick', this.OnMouseDBClickVideWrapper);
			$(HtmlDefine.VIDEO_ID4).on('dblclick', this.OnMouseDBClickVideWrapper);
		}
	},

	initLayout: function() {

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'none');
		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('display', 'none');
		$(HtmlDefine.MAINBODY_VIDEO3_WRAPPER).css('display', 'none');
		$(HtmlDefine.MAINBODY_VIDEO4_WRAPPER).css('display', 'none');
	},

	initMedia: function(_mediaobj) {

		this.streamingtype = this.dtoContentInfo._contentstreamingtype;

		if (bizDevice.isIE11() && bizDevice.isWin7()) { this.streamingtype = this.dtoContentInfo._http_content_streamingtype; }
		else if (bizDevice.isLowIE10()) { this.streamingtype = this.dtoContentInfo._http_content_streamingtype; }
		else if (bizDevice.isMobile()) { this.streamingtype = this.dtoContentInfo._m_contentstreamingtype; }
		else if (!bizDevice.isMac() && bizDevice.isSafari()) {this.streamingtype = this.dtoContentInfo._http_content_streamingtype; }

		if (_mediaobj.id() === MediaIDS.MEDIA_ID1) {
			this.churl1 = this.dtoContentInfo._contenturl1;
			if (bizDevice.isIE11() && bizDevice.isWin7()) { this.churl1 = this.dtoContentInfo._content_httpurl1; }
			else if (bizDevice.isLowIE10()) { this.churl1 = this.dtoContentInfo._content_httpurl1; }
			else if (bizDevice.isMobile()) { this.churl1 = this.dtoContentInfo._m_contenturl1; }
			else if (!bizDevice.isMac() && bizDevice.isSafari()) {this.churl1 = this.dtoContentInfo._content_httpurl1; }

			console.log("streamingtype1 : " + this.streamingtype);
			console.log("churl1 : " + this.churl1);
			this.media1.src({src: this.churl1, type: this.streamingtype, withCredentials: false });
			// this.media1.load();
			// this.media1.pause();
			if(mainApp.islive === "1") {
				console.log("live play... : " + this.media1.id());
				this.media1canplay = true;
				// this.media1.play();
			}
		}
		else if (_mediaobj.id() === MediaIDS.MEDIA_ID2) {

			this.churl2 = this.dtoContentInfo._contenturl2;
			if (bizDevice.isIE11() && bizDevice.isWin7()) {this.churl2 = this.dtoContentInfo._content_httpurl2; }
			else if (bizDevice.isLowIE10()) { this.churl2 = this.dtoContentInfo._content_httpurl2; }
			else if (bizDevice.isMobile()) { this.churl2 = this.dtoContentInfo._m_contenturl2; }
			else if (!bizDevice.isMac() && bizDevice.isSafari()) {this.churl2 = this.dtoContentInfo._content_httpurl2; }

			console.log("churl2 : " + this.churl2);
			this.media2.src({src: this.churl2, type: this.streamingtype, withCredentials: false });
			// this.media2.load();
			// this.media2.pause();
			if(mainApp.islive === "1") {
				console.log("live play... : " + this.media2.id());
				// this.media2.play();
				this.media2canplay = true;
			}
		}
		else if (_mediaobj.id() === MediaIDS.MEDIA_ID3) {
			this.churl3 = this.dtoContentInfo._contenturl3;
			if (bizDevice.isIE11() && bizDevice.isWin7()) {this.churl3 = this.dtoContentInfo._content_httpurl3; }
			else if (bizDevice.isLowIE10()) { this.churl3 = this.dtoContentInfo._content_httpurl3; }
			else if (bizDevice.isMobile()) { this.churl3 = this.dtoContentInfo._m_contenturl3; }
			else if (!bizDevice.isMac() && bizDevice.isSafari()) {this.churl3 = this.dtoContentInfo._content_httpurl3; }

			console.log("churl3 : " + this.churl3);
			this.media3.src({src: this.churl3, type: this.streamingtype, withCredentials: false });
			// this.media3.load();
			// this.media3.pause();
			if(mainApp.islive === "1") {
				console.log("live play... : " + this.media3.id());
				this.media3canplay = true;
			}
		}
		else if (_mediaobj.id() === MediaIDS.MEDIA_ID4) {
			this.churl4 = this.dtoContentInfo._contenturl4;
			if (bizDevice.isIE11() && bizDevice.isWin7()) {this.churl4 = this.dtoContentInfo._content_httpurl4; }
			else if (bizDevice.isLowIE10()) { this.churl4 = this.dtoContentInfo._content_httpurl4; }
			else if (bizDevice.isMobile()) { this.churl4 = this.dtoContentInfo._m_contenturl4; }
			else if (!bizDevice.isMac() && bizDevice.isSafari()) {this.churl4 = this.dtoContentInfo._content_httpurl4; }

			console.log("churl4 : " + this.churl4);
			this.media4.src({src: this.churl4, type: this.streamingtype, withCredentials: false });
			// this.media4.load();
			// this.media4.pause();
			if(mainApp.islive === "1") {
				console.log("live play... : " + this.media4.id());
				this.media4canplay = true;
			}
		}


	},

	release: function() {

		this.mainEventTarget = null;

		alert('release');

		if (this.media1 != null) {
			this.media1.off('loadeddata');
			this.media1.off('ended');
			this.media1.off('seeked');
			this.media1.off('play');
			this.media1.off('timeupdate');
			this.media1.off('durationchange');
			this.media1.off('error');
			this.media1.off('loadeddata');
		}

		if (this.media2 != null) {
			this.media2.off('loadeddata');
			this.media2.off('ended');
			this.media2.off('seeked');
			this.media2.off('play');
			this.media2.off('timeupdate');
			this.media2.off('durationchange');
			this.media2.off('error');
			this.media2.off('loadeddata');
		}

		if (this.media3 != null) {
			this.media3.off('loadeddata');
			this.media3.off('ended');
			this.media3.off('seeked');
			this.media3.off('play');
			this.media3.off('timeupdate');
			this.media3.off('durationchange');
			this.media3.off('error');
			this.media3.off('loadeddata');
		}

		if (this.media4 != null) {
			this.media4.off('loadeddata');
			this.media4.off('ended');
			this.media4.off('seeked');
			this.media4.off('play');
			this.media4.off('timeupdate');
			this.media4.off('durationchange');
			this.media4.off('error');
			this.media4.off('loadeddata');
		}
	},

	play: function() {

		// mp4-vod시 canplay 이벤트발생 안함, seek시만 canplay 이벤트
		// hls-vod시 canplay 이벤트발생 안함, seek시만 canplay 이벤트
		// hls-live시 seek 이벤트가 자동으로 발생하며, canplay 이벤트 까지 발생됨

		//this.media1.playbackRate(2.0);
		console.log('play()');
		if (this.media1canplay) { if(this.media1.paused()) this.media1.play();
			console.log('this.media1.play()');
		}
		if (this.media2canplay) { if(this.media2.paused()) this.media2.play();
			console.log('this.media2.play()');
		}
		if (this.media3canplay) { if(this.media3.paused()) this.media3.play(); }
		if (this.media4canplay) { if(this.media4.paused()) this.media4.play(); }
	},

	pause: function() {

		console.log('pause()');
		if (this.media1canplay) { if(!this.media1.paused()) { this.media1.pause();
			console.log('this.media1.pause()');
		}}
		if (this.media2canplay) { if(!this.media2.paused()) { this.media2.pause();
			console.log('this.media2.pause()');
		}}
		if (this.media3canplay) { if(!this.media3.paused()) { this.media3.pause(); }}
		if (this.media4canplay) { if(!this.media4.paused()) { this.media4.pause(); }}
	},

	stop: function() {

		console.log('stop()');

		if (this.media1canplay) { if(!this.media1.paused()) { this.media1.pause(); this.media1.currentTime(0); }}
		if (this.media2canplay) { if(!this.media2.paused()) { this.media2.pause(); this.media2.currentTime(0); }}
		if (this.media3canplay) { if(!this.media3.paused()) { this.media3.pause(); this.media3.currentTime(0); }}
		if (this.media4canplay) { if(!this.media4.paused()) { this.media4.pause(); this.media4.currentTime(0); }}
	},

	seekStart: function() {

		if (this.media1canplay) { this.media1seeking = true; }
		if (this.media2canplay) { this.media2seeking = true; }
		if (this.media3canplay) { this.media3seeking = true; }
		if (this.media4canplay) { this.media4seeking = true; }
	},

	seek: function(_time) {

		if (this.media1canplay) { this.media1.currentTime(_time); }
		if (this.media2canplay) { this.media2.currentTime(_time); }
		if (this.media3canplay) { this.media3.currentTime(_time); }
		if (this.media4canplay) { this.media4.currentTime(_time); }
	},

	vol: function(_vol) {

		var me = bizVideoPlayer.getUixVideoPlayer();
		me.settingvolume = _vol;
		console.log("settingvolume:" + me.settingvolume);

		if (me.dtoContentInfo._contenttype === ContentType.VIDEO1) {
			if (this.media1canplay) { this.media1.volume(_vol); }
		}
		else {
			if (me.dtoContentInfo._volumechannelindex == '0') {
				if (this.media1canplay) { this.media1.volume(_vol); }
			}
			else {
				if (this.media2canplay) { this.media2.volume(_vol); }
			}
		}

	},

	test: function() {

		console.log(this.media1duration);

		console.log(this.media1.paused());

		console.log(this.media1.readyState());//4 = noproblem

		alert('test');

		this.setLayout2Test();
	},

	speed: function(_rate) {

		if (this.media1canplay) { this.media1.playbackRate(_rate); }
		if (this.media2canplay) { this.media2.playbackRate(_rate); }
		if (this.media3canplay) { this.media3.playbackRate(_rate); }
		if (this.media4canplay) { this.media4.playbackRate(_rate); }
	},

	mainchannel: function (_index) {

		if (this.media1canplay) { }

		if (_index === 0) {
			this.lastMainchannelIndex = [0, 1, 2, 3];
		}
		else if (_index === 1) {
			this.lastMainchannelIndex = [1, 0, 2, 3];
		}
		else if (_index === 2) {
			this.lastMainchannelIndex = [2, 0, 1, 3];
		}
		else if (_index === 3) {
			this.lastMainchannelIndex = [3, 0, 1, 2];
		}

		this.currentQuardMode = SceneQuardMode.POPP;
		if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
			this.changeLayoutManualbyLastvalueType4();
		}
		else {
			this.changeLayoutManualbyLastvalueType3();
		}

	},

	quardchannel: function (_index) {

		this.currentQuardMode = SceneQuardMode.QUARD;
		if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
			this.changeLayoutQuadType4();
		}
		else {
			this.changeLayoutQuadType3();
		}

	},

	setLayoutFull: function(_mediaid) {

		//$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER);

		var me = bizVideoPlayer.getUixVideoPlayer();
		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 1.0;
		var perSub = 0.0;
		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);

		if (MediaIDS.MEDIA_ID1 === _mediaid) {

			if (me.media1full === false) {

				var fullwrapper = $(HtmlDefine.MAINBODY_VIDEO1_WRAPPER);
				var fullvideo = $(HtmlDefine.VIDEO_ID1);

				var pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
				pixMainTop = (h / 2) - (pixMainHeight / 2);

				fullwrapper.css('left', '{0}px'.format(pixMainLeft));
				fullwrapper.css('top', '{0}px'.format(pixMainTop));

				fullvideo.css('width', '{0}px'.format(pixMainWidth));
				fullvideo.css('height', '{0}px'.format(pixMainHeight));

				fullwrapper.css('display', 'inline-block');
				$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO3_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO4_WRAPPER).css('display', 'none');

				me.media1full = true;



			}
			else {
				//me.setLayout2();
				if (this.dtoContentInfo._contenttype === ContentType.VIDEO2) {
					me.changeLayoutManualbyLastvalueType2();
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO3) {

					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType3();
					}
					else {
						me.changeLayoutManualbyLastvalueType3();
					}
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType4();
					}
					else {
						me.changeLayoutManualbyLastvalueType4();
					}
				}

				me.media1full = false;
			}
		}
		else if (MediaIDS.MEDIA_ID2 == _mediaid) {

			if (me.media2full == false) {

				var fullwrapper = $(HtmlDefine.MAINBODY_VIDEO2_WRAPPER);
				var fullvideo = $(HtmlDefine.VIDEO_ID2);

				var pixMainHeight = Util.videowidthToheight(me.media2videoWidth, me.media2videoHeight, pixMainWidth);
				pixMainTop = (h / 2) - (pixMainHeight / 2);

				fullwrapper.css('left', '{0}px'.format(pixMainLeft));
				fullwrapper.css('top', '{0}px'.format(pixMainTop));

				fullvideo.css('width', '{0}px'.format(pixMainWidth));
				fullvideo.css('height', '{0}px'.format(pixMainHeight));

				fullwrapper.css('display', 'inline-block');
				$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO3_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO4_WRAPPER).css('display', 'none');

				me.media2full = true;
			}
			else {
				//me.setLayout2();

				if (this.dtoContentInfo._contenttype === ContentType.VIDEO2) {
					me.changeLayoutManualbyLastvalueType2();
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO3) {

					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType3();
					}
					else {
						me.changeLayoutManualbyLastvalueType3();
					}
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType4();
					}
					else {
						me.changeLayoutManualbyLastvalueType4();
					}
				}

				me.media2full = false;
			}
		}
		else if (MediaIDS.MEDIA_ID3 == _mediaid) {

			if (me.media3full == false) {

				var fullwrapper = $(HtmlDefine.MAINBODY_VIDEO3_WRAPPER);
				var fullvideo = $(HtmlDefine.VIDEO_ID3);

				var pixMainHeight = Util.videowidthToheight(me.media3videoWidth, me.media3videoHeight, pixMainWidth);
				pixMainTop = (h / 2) - (pixMainHeight / 2);
				fullwrapper.css('left', '{0}px'.format(pixMainLeft));
				fullwrapper.css('top', '{0}px'.format(pixMainTop));

				fullvideo.css('width', '{0}px'.format(pixMainWidth));
				fullvideo.css('height', '{0}px'.format(pixMainHeight));

				fullwrapper.css('display', 'inline-block');
				$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO4_WRAPPER).css('display', 'none');

				me.media3full = true;
			}
			else {
				//me.setLayout2();

				if (this.dtoContentInfo._contenttype === ContentType.VIDEO2) {
					me.changeLayoutManualbyLastvalueType2();
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO3) {
					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType3();
					}
					else {
						me.changeLayoutManualbyLastvalueType3();
					}
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType4();
					}
					else {
						me.changeLayoutManualbyLastvalueType4();
					}
				}

				me.media3full = false;
			}
		}
		else if (MediaIDS.MEDIA_ID4 == _mediaid) {

			if (me.media4full == false) {

				var fullwrapper = $(HtmlDefine.MAINBODY_VIDEO4_WRAPPER);
				var fullvideo = $(HtmlDefine.VIDEO_ID4);

				var pixMainHeight = Util.videowidthToheight(me.media4videoWidth, me.media4videoHeight, pixMainWidth);
				pixMainTop = (h / 2) - (pixMainHeight / 2);
				fullwrapper.css('left', '{0}px'.format(pixMainLeft));
				fullwrapper.css('top', '{0}px'.format(pixMainTop));

				fullvideo.css('width', '{0}px'.format(pixMainWidth));
				fullvideo.css('height', '{0}px'.format(pixMainHeight));

				fullwrapper.css('display', 'inline-block');
				$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('display', 'none');
				$(HtmlDefine.MAINBODY_VIDEO3_WRAPPER).css('display', 'none');

				me.media4full = true;
			}
			else {
				//me.setLayout2();

				if (this.dtoContentInfo._contenttype === ContentType.VIDEO2) {
					me.changeLayoutManualbyLastvalueType2();
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO3) {
					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType3();
					}
					else {
						me.changeLayoutManualbyLastvalueType3();
					}
				}
				else if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
					if (this.currentQuardMode === SceneQuardMode.QUARD) {
						me.changeLayoutQuadType4();
					}
					else {
						me.changeLayoutManualbyLastvalueType4();
					}
				}

				me.media4full = false;
			}


		}
	},

	setLayout1: function() {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 1.0;
		var perSub = 0.0;
		var heightmargin = 38;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);
		var pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight / 2);				// 가운데 위치

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('left', '{0}px'.format(pixMainLeft));
		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('top', '{0}px'.format(pixMainTop));

		$(HtmlDefine.VIDEO_ID1).css('width', '{0}px'.format(pixMainWidth));
		$(HtmlDefine.VIDEO_ID1).css('height', '{0}px'.format(pixMainHeight));

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'inline-block');

	},

	setLayout2: function() {

		console.log('setLayout2');

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 0.7;
		var perSub = 0.3;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);
		var pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight / 2);				// 가운데 위치

		var pixSubLeft = pixMainWidth;
		var pixSubTop = 0;
		var pixSubWidth = Util.percentToPixel(perSub, w);
		var pixSubHeight = Util.videowidthToheight(me.media2videoWidth, me.media2videoHeight, pixSubWidth);
		pixSubTop = (h / 2) - (pixSubHeight / 2);				// 가운데 위치

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('left', '{0}px'.format(pixMainLeft));
		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('top', '{0}px'.format(pixMainTop));

		$(HtmlDefine.VIDEO_ID1).css('width', '{0}px'.format(pixMainWidth));
		$(HtmlDefine.VIDEO_ID1).css('height', '{0}px'.format(pixMainHeight));

		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('left', '{0}px'.format(pixSubLeft));
		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('top', '{0}px'.format(pixSubTop));

		$(HtmlDefine.VIDEO_ID2).css('width', '{0}px'.format(pixSubWidth));
		$(HtmlDefine.VIDEO_ID2).css('height', '{0}px'.format(pixSubHeight));

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'inline-block');
		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('display', 'inline-block');


		me.currentSceneMode = SceneMode.POP;

		me.perLastMainL = Util.pixelToPercent(pixMainLeft, w);
		me.perLastMainT = Util.pixelToPercent(pixMainTop, h);
		me.perLastMainW = Util.pixelToPercent(pixMainWidth, w);
		me.perLastMainH = Util.pixelToPercent(pixMainHeight, h);

		me.perLastSubL = Util.pixelToPercent(pixSubLeft, w);
		me.perLastSubT = Util.pixelToPercent(pixSubTop, h);
		me.perLastSubW = Util.pixelToPercent(pixSubWidth, w);
		me.perLastSubH = Util.pixelToPercent(pixSubHeight, h);

		if (me.mainEventTarget) {
			var  arraylayout = [me.currentSceneMode, pixMainWidth, pixSubWidth, 'false'];
			me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
		}
	},

	setLayout3: function() {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 0.7;
		var perSub = 0.3;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);
		var pixMainHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[0]), me.ch_mediavideoHeight(me.lastMainchannelIndex[0]), pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight / 2);				// 가운데를 중심으로 위쪽위치 찾음

		var pixSubLeft = pixMainWidth + 1;
		var pixSubTop = 0;
		var pixSubWidth = Util.percentToPixel(perSub, (w - 1));
		var pixSubHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[1]), me.ch_mediavideoHeight(me.lastMainchannelIndex[1]), pixSubWidth);

		var pixSub2Height = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[2]), me.ch_mediavideoHeight(me.lastMainchannelIndex[2]), pixSubWidth);

		pixSubTop = Math.round((h / 2) - ((pixSubHeight + pixSub2Height) / 2));	// 가운데를 중심으로 2채널 위쪽위치 찾음
		pixSub2Top = pixSubTop + Math.round(pixSub2Height) + 1;				// 가운데를 중심으로 3채널 위쪽위치 찾음

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('left', '{0}px'.format(pixMainLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('top', '{0}px'.format(pixMainTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('width', '{0}px'.format(pixMainWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('height', '{0}px'.format(pixMainHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('top', '{0}px'.format(pixSubTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('top', '{0}px'.format(pixSub2Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('display', 'inline-block');

	},

	setLayout4: function() {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 0.7;
		var perSub = 0.3;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);
		var pixMainHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[0]), me.ch_mediavideoHeight(me.lastMainchannelIndex[0]), pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight / 2);				// 가운데를 중심으로 위쪽위치 찾음

		var pixSubLeft = pixMainWidth + 1;
		var pixSubTop = 0;
		var pixSubWidth = Util.percentToPixel(perSub, (w - 1));
		var pixSubHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[1]), me.ch_mediavideoHeight(me.lastMainchannelIndex[1]), pixSubWidth);

		var pixSub2Height = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[2]), me.ch_mediavideoHeight(me.lastMainchannelIndex[2]), pixSubWidth);
		var pixSub3Height = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[3]), me.ch_mediavideoHeight(me.lastMainchannelIndex[3]), pixSubWidth);

		pixSubTop = Math.round((h / 2) - ((pixSubHeight + pixSub2Height + pixSub3Height) / 2));	// 가운데를 중심으로 3채널 위쪽위치 찾음
		var pixSub2Top = pixSubTop + Math.round(pixSub2Height) + 1;									// 가운데를 중심으로 3채널 위쪽위치 찾음
		var pixSub3Top = pixSub2Top + Math.round(pixSub3Height) + 1;									// 가운데를 중심으로 3채널 위쪽위치 찾음

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('left', '{0}px'.format(pixMainLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('top', '{0}px'.format(pixMainTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('width', '{0}px'.format(pixMainWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('height', '{0}px'.format(pixMainHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('top', '{0}px'.format(pixSubTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('top', '{0}px'.format(pixSub2Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('height', '{0}px'.format(pixSubHeight));


		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('top', '{0}px'.format(pixSub3Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[3])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[3])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('display', 'inline-block');

	},


	resizeWindow: function() {

		if (this.dtoContentInfo._contenttype === ContentType.VIDEO1) {

			this.setLayout1();
		}
		else if (this.dtoContentInfo._contenttype === ContentType.VIDEO2) {

			this.changeLayoutManualbyLastvalueType2();
		}
		else if (this.dtoContentInfo._contenttype === ContentType.VIDEO3) {
			if (this.currentQuardMode === SceneQuardMode.POPP) {
				this.changeLayoutManualbyLastvalueType3();
			}
			else {
				this.changeLayoutQuadType3();
			}
		}
		else if (this.dtoContentInfo._contenttype === ContentType.VIDEO4) {
			if (this.currentQuardMode === SceneQuardMode.POPP) {
				this.changeLayoutManualbyLastvalueType4();
			}
			else {
				this.changeLayoutQuadType4();
			}
		}
	},


	toggleFullScreenX: function(elem) {
		if ((document.fullScreenElement !== undefined && document.fullScreenElement === null) || (document.msFullscreenElement !== undefined && document.msFullscreenElement === null) || (document.mozFullScreen !== undefined && !document.mozFullScreen) || (document.webkitIsFullScreen !== undefined && !document.webkitIsFullScreen)) {
			if (elem.requestFullScreen) {
				elem.requestFullScreen();
			} else if (elem.mozRequestFullScreen) {
				elem.mozRequestFullScreen();
			} else if (elem.webkitRequestFullScreen) {
				elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
			} else if (elem.msRequestFullscreen) {
				elem.msRequestFullscreen();
			}
		} else {
			if (document.cancelFullScreen) {
				document.cancelFullScreen();
			} else if (document.mozCancelFullScreen) {
				document.mozCancelFullScreen();
			} else if (document.webkitCancelFullScreen) {
				document.webkitCancelFullScreen();
			} else if (document.msExitFullscreen) {
				document.msExitFullscreen();
			}
		}
	},

	//--  마우스를 움직여 레이아웃을 조정한다.
	changeLayoutManual: function(_wrapper, _wrappersub, _clientX, _event) {

		var me = bizVideoPlayer.getUixVideoPlayer();

		if (me.isvideodraging === false) return;

		var currX = _clientX;

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();
		var width = $(_wrapper).innerWidth();
		var height = $(_wrapper).innerHeight();
		var left = 0;//$(_wrapper).offset().left;
		var widthsub = $(_wrappersub).innerWidth();
		var heightsub = $(_wrappersub).innerHeight();
		var heightmargin = 38;
		var distX = currX - me.mousePreLayoutX;

		var distDownX = currX - me.mouseDownLayoutX;

		me.mousePreLayoutX = currX;

		var perMain = 1.0;
		var perMainOri = 0.7;
		var perSub = 0.25;
		var perSubOri = 0.3;

		var pixMainLeft = 0;//left;//$(_wrapper).offset().left;
		var pixMainTop = parseInt(0);
		var pixMainWidth = width;
		var pixMainHeight = height;

		var pixSubLeft = 0;
		var pixSubWidth = widthsub;
		var pixSubHeight = heightsub;
		var pixSubTop = 0;

		if (me.currentSceneMode === SceneMode.POP) {

			if (distX > 0) {

				if (pixMainWidth >= (Util.percentToPixel(perMainOri, w) - 1) ) {

					if (me.firstPopReady === false) {

						me.firstPopReady = true;
						me.distLayoutTmpX = currX;
					}

					if (me.firstPopReady === true) {

						var tmpX = currX - me.distLayoutTmpX;

						if (tmpX >= Util.percentToPixel(0.1, w)) {
							// PIP 변경
							console.log('PIP');

							me.currentSceneMode = SceneMode.PIP;
							me.mouseDownLayoutX = currX;
							me.distLayoutTmpX = currX;

							pixMainWidth = w;
							pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
							pixMainTop = (h / 2) - (pixMainHeight / 2);

							pixSubLeft = w - Util.percentToPixel(perSub, w);
							pixSubWidth = Util.percentToPixel(perSub, w);
							pixSubHeight = Util.videowidthToheight(me.media2videoWidth, me.media2videoHeight, pixSubWidth);
							pixSubTop = heightmargin;

							// PIP로 변경
							if (me.mainEventTarget) {
								var  arraylayout = [me.currentSceneMode, pixMainWidth - pixSubWidth, pixSubWidth, 'false'];
								me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
							}
						}
						else {

							console.log('POP Ready');

							// POP Ready 모드(영상은 조절안되고, 상단바만 움직인다)
							me.currentSceneMode = SceneMode.POP;

							if (me.mainEventTarget) {
								var  arraylayout = [me.currentSceneMode, pixMainWidth + tmpX, w - (pixMainWidth + tmpX), 'true'];
								me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
							}
							return;
						}
					}//end -- if (me.firstPopReady == true) {
				}
				else {

					console.log('POP');

					me.currentSceneMode = SceneMode.POP;

					if (me.mainEventTarget) {
						var  arraylayout = [me.currentSceneMode, distX + width, w - (distX + width), 'false'];
						me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
					}

					pixMainWidth = distX + width;
					pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
					pixMainTop = (h / 2) - (pixMainHeight / 2);

					pixSubLeft = pixMainWidth;
					pixSubWidth = w - pixMainWidth;
					pixSubHeight = Util.videowidthToheight(me.media2videoWidth, me.media2videoHeight, pixSubWidth);
					pixSubTop = (h / 2) - (pixSubHeight / 2);
				}

				me.setLayoutDraw(pixMainLeft, pixMainTop, pixMainWidth, pixMainHeight, pixSubLeft, pixSubTop, pixSubWidth, pixSubHeight, w, h);
			}
			else if (distX < 0) {

				if (me.firstPopReady == true) {

					var tmpX = currX - me.distLayoutTmpX;

					if(pixMainWidth < (pixMainWidth + tmpX)) {

						// POP에서 더이상 축소되지 않을경우
						me.currentSceneMode = SceneMode.POP;

						if (me.mainEventTarget) {
							var  arraylayout = [me.currentSceneMode, pixMainWidth + tmpX, w - (pixMainWidth + tmpX), 'true'];
							me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
						}

						return;
					}
					else {

						// POP에서 축소할 경우

						me.currentSceneMode = SceneMode.POP;

						if (me.mainEventTarget) {
							var  arraylayout = [me.currentSceneMode, distX + width, w - (distX + width), 'false'];
							me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
						}

						if ((distX + width) < Util.percentToPixel(0.25, w)) { return; }
					}
				}
				else {

					// POP에서 축소할 경우

					me.currentSceneMode = SceneMode.POP;

					if (me.mainEventTarget) {
						var  arraylayout = [me.currentSceneMode, distX + width, w - (distX + width), 'false'];
						me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
					}

					if ((distX + width) < Util.percentToPixel(0.25, w)) { return; }
				}

				pixMainWidth = distX + width;
				pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
				pixMainTop = (h / 2) - (pixMainHeight / 2);

				pixSubLeft = pixMainWidth;
				pixSubWidth = w - pixMainWidth;
				pixSubHeight = Util.videowidthToheight(me.media2videoWidth, me.media2videoHeight, pixSubWidth);
				pixSubTop = (h / 2) - (pixSubHeight / 2);

				me.setLayoutDraw(pixMainLeft, pixMainTop, pixMainWidth, pixMainHeight, pixSubLeft, pixSubTop, pixSubWidth, pixSubHeight, w, h);
			}
		}
		else if (me.currentSceneMode === SceneMode.PIP) {

			if (distX > 0) {

			}
			else if (distX < 0){

				if (me.firstPipReady === false) {

					me.firstPipReady = true;
					me.distLayoutTmpX = currX;
				}

				if (me.firstPipReady) {

					var tmpX = (currX - me.distLayoutTmpX) * (-1);

					if (tmpX >= Util.percentToPixel(0.1, w)) {

						me.currentSceneMode = SceneMode.POP;
						me.mouseDownLayoutX = currX;
						me.distLayoutTmpX = currX;

						pixMainWidth = Util.percentToPixel(perMainOri, w);
						pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
						pixMainTop = (h / 2) - (pixMainHeight / 2);

						pixSubLeft = w - Util.percentToPixel(perSubOri, w);
						pixSubWidth = Util.percentToPixel(perSubOri, w);
						pixSubHeight = Util.videowidthToheight(me.media2videoWidth, me.media2videoHeight, pixSubWidth);
						pixSubTop = (h / 2) - (pixSubHeight / 2);

						me.setLayoutDraw(pixMainLeft, pixMainTop, pixMainWidth, pixMainHeight, pixSubLeft, pixSubTop, pixSubWidth, pixSubHeight, w, h);

						// POP로 변경
						if (me.mainEventTarget) {
							var  arraylayout = [me.currentSceneMode, pixMainWidth - pixSubWidth, pixSubWidth, 'false'];
							me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
						}
					}
					else {

						me.currentSceneMode = SceneMode.PIP;

						if (me.mainEventTarget) {
							var  arraylayout = [me.currentSceneMode, pixMainWidth - tmpX, w - (pixMainWidth - tmpX), 'true'];
							me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
						}

						return;
					}
				}
			}
		}
	},

	//-- 좌표를 이용해 레이아웃을 배치한다
	//-- 값을 저장함
	setLayoutDraw: function(_pixMainLeft, _pixMainTop, _pixMainWidth, _pixMainHeight, _pixSubLeft, _pixSubTop, _pixSubWidth, _pixSubHeight, _w, _h) {

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('left', '{0}px'.format(_pixMainLeft));
		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('top', '{0}px'.format(_pixMainTop));

		$(HtmlDefine.VIDEO_ID1).css('width', '{0}px'.format(_pixMainWidth));
		$(HtmlDefine.VIDEO_ID1).css('height', '{0}px'.format(_pixMainHeight));

		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('left', '{0}px'.format(_pixSubLeft));
		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('top', '{0}px'.format(_pixSubTop));

		$(HtmlDefine.VIDEO_ID2).css('width', '{0}px'.format(_pixSubWidth));
		$(HtmlDefine.VIDEO_ID2).css('height', '{0}px'.format(_pixSubHeight));

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'inline-block');
		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('display', 'inline-block');

		var me = bizVideoPlayer.getUixVideoPlayer();

		me.perLastMainL = Util.pixelToPercent(_pixMainLeft, _w);
		me.perLastMainT = Util.pixelToPercent(_pixMainTop, _h);
		me.perLastMainW = Util.pixelToPercent(_pixMainWidth, _w);
		me.perLastMainH = Util.pixelToPercent(_pixMainHeight, _h);

		me.perLastSubL = Util.pixelToPercent(_pixSubLeft, _w);
		me.perLastSubT = Util.pixelToPercent(_pixSubTop, _h);
		me.perLastSubW = Util.pixelToPercent(_pixSubWidth, _w);
		me.perLastSubH = Util.pixelToPercent(_pixSubHeight, _h);
	},

	//--  마지막 저장된 값으로 레이아웃을 조정한다
	//--  2채널일 경우 적용됨
	changeLayoutManualbyLastvalueType2: function() {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();
		var heightmargin = 38;

		var pixMainLeft = 0;//Util.percentToPixel(me.perLastMainL, w);
		var pixMainTop = 0;//Util.percentToPixel(me.perLastMainT, h);
		var pixMainWidth = Util.percentToPixel(me.perLastMainW, w);
		var pixMainHeight = Util.videowidthToheight(me.media1videoWidth, me.media1videoHeight, pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight / 2);

		var pixSubLeft = Util.percentToPixel(me.perLastSubL, w);
		var pixSubTop =  Util.percentToPixel(me.perLastSubT, h);
		var pixSubWidth = Util.percentToPixel(me.perLastSubW, w);
		//var pixSubHeight = Util.percentToPixel(me.perLastSubH, h);
		var pixSubHeight = Util.videowidthToheight(me.media2videoWidth, me.media2videoHeight, pixSubWidth);

		if (me.currentSceneMode === SceneMode.POP) {
			pixSubTop = (h / 2) - (pixSubHeight / 2);
		}
		else {
			pixSubTop = heightmargin;
		}

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('left', '{0}px'.format(pixMainLeft));
		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('top', '{0}px'.format(pixMainTop));

		$(HtmlDefine.VIDEO_ID1).css('width', '{0}px'.format(pixMainWidth));
		$(HtmlDefine.VIDEO_ID1).css('height', '{0}px'.format(pixMainHeight));

		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('left', '{0}px'.format(pixSubLeft));
		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('top', '{0}px'.format(pixSubTop));

		$(HtmlDefine.VIDEO_ID2).css('width', '{0}px'.format(pixSubWidth));
		$(HtmlDefine.VIDEO_ID2).css('height', '{0}px'.format(pixSubHeight));

		$(HtmlDefine.MAINBODY_VIDEO1_WRAPPER).css('display', 'inline-block');
		$(HtmlDefine.MAINBODY_VIDEO2_WRAPPER).css('display', 'inline-block');

		if (me.mainEventTarget) {
			var  arraylayout = [me.currentSceneMode, pixMainWidth, pixSubWidth, 'false'];
			me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED, arraylayout);
		}

	},

	ch_mediavideoWidth: function(_mainchindex) {

		var me = bizVideoPlayer.getUixVideoPlayer();

		if (_mainchindex === 0) { return me.media1videoWidth; }
		else if (_mainchindex === 1) { return me.media2videoWidth; }
		else if (_mainchindex === 2) { return me.media3videoWidth; }
		else if (_mainchindex === 3) { return me.media4videoWidth; }
		else {
			return 0;
		}
	},

	ch_mediavideoHeight: function(_mainchindex) {

		var me = bizVideoPlayer.getUixVideoPlayer();

		if (_mainchindex === 0) { return me.media1videoHeight; }
		else if (_mainchindex === 1) { return me.media2videoHeight; }
		else if (_mainchindex === 2) { return me.media3videoHeight; }
		else if (_mainchindex === 3) { return me.media4videoHeight; }
		else {
			return 0;
		}
	},

	ch_mediavideoLayoutWrapper: function(_mainchindex) {

		var me = bizVideoPlayer.getUixVideoPlayer();

		if (_mainchindex === 0) { return HtmlDefine.MAINBODY_VIDEO1_WRAPPER; }
		else if (_mainchindex === 1) { return HtmlDefine.MAINBODY_VIDEO2_WRAPPER; }
		else if (_mainchindex === 2) { return HtmlDefine.MAINBODY_VIDEO3_WRAPPER; }
		else if (_mainchindex === 3) { return HtmlDefine.MAINBODY_VIDEO4_WRAPPER; }
		else {
			return HtmlDefine.MAINBODY_VIDEO1_WRAPPER;
		}
	},

	ch_mediavideoLayoutVideoID: function(_mainchindex) {

		var me = bizVideoPlayer.getUixVideoPlayer();

		if (_mainchindex === 0) { return HtmlDefine.VIDEO_ID1; }
		else if (_mainchindex === 1) { return HtmlDefine.VIDEO_ID2; }
		else if (_mainchindex === 2) { return HtmlDefine.VIDEO_ID3; }
		else if (_mainchindex === 3) { return HtmlDefine.VIDEO_ID4; }
		else {
			return HtmlDefine.VIDEO_ID1;
		}
	},

	changeLayoutManualbyLastvalueType3: function () {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 0.7;
		var perSub = 0.3;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);

		var pixMainHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[0]), me.ch_mediavideoHeight(me.lastMainchannelIndex[0]), pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight / 2);				// 가운데를 중심으로 위쪽위치 찾음

		var pixSubLeft = pixMainWidth + 1;
		var pixSubTop = 0;
		var pixSubWidth = Util.percentToPixel(perSub, (w - 1));
		var pixSubHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[1]), me.ch_mediavideoHeight(me.lastMainchannelIndex[1]), pixSubWidth);

		var pixSub2Height = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[2]), me.ch_mediavideoHeight(me.lastMainchannelIndex[2]), pixSubWidth);

		pixSubTop = Math.round((h / 2) - ((pixSubHeight + pixSub2Height) / 2));	// 가운데를 중심으로 2채널 위쪽위치 찾음
		pixSub2Top = pixSubTop + Math.round(pixSub2Height) + 1;				// 가운데를 중심으로 3채널 위쪽위치 찾음

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('left', '{0}px'.format(pixMainLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('top', '{0}px'.format(pixMainTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('width', '{0}px'.format(pixMainWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('height', '{0}px'.format(pixMainHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('top', '{0}px'.format(pixSubTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('top', '{0}px'.format(pixSub2Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('display', 'inline-block');

	},

	changeLayoutManualbyLastvalueType4: function () {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 0.7;
		var perSub = 0.3;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);

		var pixMainHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[0]), me.ch_mediavideoHeight(me.lastMainchannelIndex[0]), pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight / 2);				// 가운데를 중심으로 위쪽위치 찾음

		var pixSubLeft = pixMainWidth + 1;
		var pixSubTop = 0;
		var pixSubWidth = Util.percentToPixel(perSub, (w - 1));
		var pixSubHeight = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[1]), me.ch_mediavideoHeight(me.lastMainchannelIndex[1]), pixSubWidth);

		var pixSub2Height = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[2]), me.ch_mediavideoHeight(me.lastMainchannelIndex[2]), pixSubWidth);
		var pixSub3Height = Util.videowidthToheight(me.ch_mediavideoWidth(me.lastMainchannelIndex[3]), me.ch_mediavideoHeight(me.lastMainchannelIndex[3]), pixSubWidth);

		pixSubTop = Math.round((h / 2) - ((pixSubHeight + pixSub2Height + pixSub3Height) / 2));	// 가운데를 중심으로 3채널 위쪽위치 찾음
		var pixSub2Top = pixSubTop + Math.round(pixSub2Height) + 1;									// 가운데를 중심으로 3채널 위쪽위치 찾음
		var pixSub3Top = pixSub2Top + Math.round(pixSub3Height) + 1;									// 가운데를 중심으로 3채널 위쪽위치 찾음

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('left', '{0}px'.format(pixMainLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('top', '{0}px'.format(pixMainTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('width', '{0}px'.format(pixMainWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('height', '{0}px'.format(pixMainHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('top', '{0}px'.format(pixSubTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('top', '{0}px'.format(pixSub2Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('top', '{0}px'.format(pixSub3Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[3])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[3])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('display', 'inline-block');

	},

	changeLayoutQuadType3: function () {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 0.5;
		var perSub = 0.5;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);

		var pixMainHeight = Util.videowidthToheight(1920, 1080, pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight);				// 가운데를 중심으로 위쪽위치 찾음

		var pixSubLeft = pixMainWidth + 1;
		var pixSubTop = pixMainTop;
		var pixSubWidth = Util.percentToPixel(perSub, (w - 1));
		var pixSubHeight = Util.videowidthToheight(1920, 1080, pixSubWidth);

		var pixSub2Top = pixMainTop + pixMainHeight + 1;
		var pixSub2Left = pixMainLeft;
		var pixSub2Width = pixMainWidth;
		var pixSub2Height = pixMainHeight;

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('left', '{0}px'.format(pixMainLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('top', '{0}px'.format(pixMainTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('width', '{0}px'.format(pixMainWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('height', '{0}px'.format(pixMainHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('top', '{0}px'.format(pixSubTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('left', '{0}px'.format(pixSub2Left));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('top', '{0}px'.format(pixSub2Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('width', '{0}px'.format(pixSub2Width));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('height', '{0}px'.format(pixSub2Height));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('display', 'inline-block');

	},

	changeLayoutQuadType4: function () {

		var me = bizVideoPlayer.getUixVideoPlayer();

		var w = $(window).innerWidth();
		var h = $(window).innerHeight();

		//-- 0.5 : 0.5
		var perMain = 0.5;
		var perSub = 0.5;

		var pixMainLeft = 0;
		var pixMainTop = parseInt(0);
		var pixMainWidth = Util.percentToPixel(perMain, w);

		var pixMainHeight = Util.videowidthToheight(1920, 1080, pixMainWidth);
		pixMainTop = (h / 2) - (pixMainHeight);				// 가운데를 중심으로 위쪽위치 찾음

		var pixSubLeft = pixMainWidth + 1;
		var pixSubTop = pixMainTop;
		var pixSubWidth = Util.percentToPixel(perSub, (w - 1));
		var pixSubHeight = Util.videowidthToheight(1920, 1080, pixSubWidth);

		var pixSub2Top = pixMainTop + pixMainHeight + 1;
		var pixSub2Left = pixMainLeft;
		var pixSub2Width = pixMainWidth;
		var pixSub2Height = pixMainHeight;

		var pixSub3Top = pixSub2Top;
		var pixSub3Left = pixSubLeft;
		var pixSub3Width = pixSubWidth;
		var pixSub3Height = pixSubHeight;

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('left', '{0}px'.format(pixMainLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('top', '{0}px'.format(pixMainTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('width', '{0}px'.format(pixMainWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[0])).css('height', '{0}px'.format(pixMainHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('left', '{0}px'.format(pixSubLeft));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('top', '{0}px'.format(pixSubTop));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('width', '{0}px'.format(pixSubWidth));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[1])).css('height', '{0}px'.format(pixSubHeight));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('left', '{0}px'.format(pixSub2Left));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('top', '{0}px'.format(pixSub2Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('width', '{0}px'.format(pixSub2Width));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[2])).css('height', '{0}px'.format(pixSub2Height));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('left', '{0}px'.format(pixSub3Left));
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('top', '{0}px'.format(pixSub3Top));

		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[3])).css('width', '{0}px'.format(pixSub3Width));
		$(me.ch_mediavideoLayoutVideoID(me.lastMainchannelIndex[3])).css('height', '{0}px'.format(pixSub3Height));

		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[0])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[1])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[2])).css('display', 'inline-block');
		$(me.ch_mediavideoLayoutWrapper(me.lastMainchannelIndex[3])).css('display', 'inline-block');

	},
	/* ------------------------------------------------------------------------------------------------------------------
	// ------------------------------------ event function block --------------------------------------------------------
	// ------------------------------------------------------------------------------------------------------------------*/


	evt: function() {

	},

	OnMouseMoveVideoWrapper: function() {

		var me = bizVideoPlayer.getUixVideoPlayer();
		if (me.mainEventTarget) me.mainEventTarget.fire(EventDefine.VIDEO_ALLWRAP_MOUSEOVER);

	},


	OnMouseDownVideo01Wrapper: function(e) {

		e.preventDefault();

		var me = bizVideoPlayer.getUixVideoPlayer();

		me.mouseDownLayoutX = Util.getClientX(e);
		me.mousePreLayoutX = Util.getClientX(e);
		me.mouseDownLayoutWidth = $(HtmlDefine.VIDEO_ID1).innerWidth();

		me.isvideodraging = true;

		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).on('mousemove', me.OnMouseMoveVideo01Wrapper);
		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).on('mouseup', me.OnMouseUpVideo01Wrapper);

	},


	//-- 화면을 클릭할 경우 움직여 레이아웃을 수정함
	//--
	OnMouseMoveVideo01Wrapper: function(e) {

		e.preventDefault();

		var me = bizVideoPlayer.getUixVideoPlayer();

		me.changeLayoutManual($(HtmlDefine.VIDEO_ID1), $(HtmlDefine.VIDEO_ID2), Util.getClientX(e), '');
	},

	//-- 화면을 클릭 후 손땔경우, 레이아웃관련 이벤트를 종료하고, 화면커버를 보여주는 이벤트 발생함
	//--
	OnMouseUpVideo01Wrapper: function(e) {

		e.preventDefault();

		var me = bizVideoPlayer.getUixVideoPlayer();

		me.mouseDownLayoutX = 0;
		me.mousePreLayoutX = 0;
		me.mouseDownLayoutWidth = 0;
		me.isvideodraging = false;
		me.firstPopReady = false;
		me.firstPipReady = false;

		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).off('mousemove', this.OnMouseMoveVideo01Wrapper);
		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).off('mouseup', this.OnMouseUpVideo01Wrapper);

		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).on('mousemove', me.OnMouseMoveVideoWrapper);

		if (me.mainEventTarget) {
			me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED_COMPLETED);
		}
	},

	OnMouseOutVideo01Wrapper: function(e) {

		e.preventDefault();

		var me = bizVideoPlayer.getUixVideoPlayer();

		me.mouseDownLayoutX = 0;
		me.mousePreLayoutX = 0;
		me.mouseDownLayoutWidth = 0;
		me.isvideodraging = false;
		me.firstPopReady = false;
		me.firstPipReady = false;

		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).off('mousemove', this.OnMouseMoveVideo01Wrapper);
		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).off('mouseup', this.OnMouseUpVideo01Wrapper);

		$(HtmlDefine.MAINBODY_VIDEOALL_WRAPPER).on('mousemove', me.OnMouseMoveVideoWrapper);

		if (me.mainEventTarget) {
			me.mainEventTarget.fire(EventDefine.VIDEO_LAYOUTCHANGED_COMPLETED);
		}
	},




	OnMouseDBClickVideWrapper: function() {

		// Chrome	: wrapper 최대화시 컨트롤이 강제로 보임
		// IE		: 최대위치가 이상함

		var me = bizVideoPlayer.getUixVideoPlayer();

		/*
		if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID1) != -1) me.toggleFullScreenX(document.querySelector(HtmlDefine.VIDEO_ID1));
		else if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID2) != -1) me.toggleFullScreenX(document.querySelector(HtmlDefine.VIDEO_ID2));
		else if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID3) != -1) me.toggleFullScreenX(document.querySelector(HtmlDefine.VIDEO_ID3));
		else if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID4) != -1) me.toggleFullScreenX(document.querySelector(HtmlDefine.VIDEO_ID4));
		*/

		if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID1) != -1) me.setLayoutFull(MediaIDS.MEDIA_ID1);
		else if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID2) != -1) me.setLayoutFull(MediaIDS.MEDIA_ID2);
		else if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID3) != -1) me.setLayoutFull(MediaIDS.MEDIA_ID3);
		else if ($(this).attr('id').indexOf(MediaIDS.MEDIA_ID4) != -1) me.setLayoutFull(MediaIDS.MEDIA_ID4);



	}

});







